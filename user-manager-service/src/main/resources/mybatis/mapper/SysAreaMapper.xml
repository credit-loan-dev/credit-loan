<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sixliu.credit.user.mapper.SysAreaMapper">
  <resultMap id="BaseResultMap" type="com.sixliu.credit.user.entity.SysArea">
    <id column="area_code" jdbcType="VARCHAR" property="areaCode" />
    <result column="parent_code" jdbcType="VARCHAR" property="parentCode" />
    <result column="parent_codes" jdbcType="VARCHAR" property="parentCodes" />
    <result column="tree_sort" jdbcType="DECIMAL" property="treeSort" />
    <result column="tree_sorts" jdbcType="VARCHAR" property="treeSorts" />
    <result column="tree_leaf" jdbcType="CHAR" property="treeLeaf" />
    <result column="tree_level" jdbcType="DECIMAL" property="treeLevel" />
    <result column="tree_names" jdbcType="VARCHAR" property="treeNames" />
    <result column="area_name" jdbcType="VARCHAR" property="areaName" />
    <result column="area_type" jdbcType="CHAR" property="areaType" />
    <result column="status" jdbcType="CHAR" property="status" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    area_code, parent_code, parent_codes, tree_sort, tree_sorts, tree_leaf, tree_level, 
    tree_names, area_name, area_type, status, create_by, create_date, update_by, update_date, 
    remarks
  </sql>
  <select id="selectByExample" parameterType="com.sixliu.credit.user.entity.SysAreaExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_area
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_area
    where area_code = #{areaCode,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from sys_area
    where area_code = #{areaCode,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.sixliu.credit.user.entity.SysAreaExample">
    delete from sys_area
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sixliu.credit.user.entity.SysArea">
    insert into sys_area (area_code, parent_code, parent_codes, 
      tree_sort, tree_sorts, tree_leaf, 
      tree_level, tree_names, area_name, 
      area_type, status, create_by, 
      create_date, update_by, update_date, 
      remarks)
    values (#{areaCode,jdbcType=VARCHAR}, #{parentCode,jdbcType=VARCHAR}, #{parentCodes,jdbcType=VARCHAR}, 
      #{treeSort,jdbcType=DECIMAL}, #{treeSorts,jdbcType=VARCHAR}, #{treeLeaf,jdbcType=CHAR}, 
      #{treeLevel,jdbcType=DECIMAL}, #{treeNames,jdbcType=VARCHAR}, #{areaName,jdbcType=VARCHAR}, 
      #{areaType,jdbcType=CHAR}, #{status,jdbcType=CHAR}, #{createBy,jdbcType=VARCHAR}, 
      #{createDate,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR}, #{updateDate,jdbcType=TIMESTAMP}, 
      #{remarks,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.sixliu.credit.user.entity.SysArea">
    insert into sys_area
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="areaCode != null">
        area_code,
      </if>
      <if test="parentCode != null">
        parent_code,
      </if>
      <if test="parentCodes != null">
        parent_codes,
      </if>
      <if test="treeSort != null">
        tree_sort,
      </if>
      <if test="treeSorts != null">
        tree_sorts,
      </if>
      <if test="treeLeaf != null">
        tree_leaf,
      </if>
      <if test="treeLevel != null">
        tree_level,
      </if>
      <if test="treeNames != null">
        tree_names,
      </if>
      <if test="areaName != null">
        area_name,
      </if>
      <if test="areaType != null">
        area_type,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="areaCode != null">
        #{areaCode,jdbcType=VARCHAR},
      </if>
      <if test="parentCode != null">
        #{parentCode,jdbcType=VARCHAR},
      </if>
      <if test="parentCodes != null">
        #{parentCodes,jdbcType=VARCHAR},
      </if>
      <if test="treeSort != null">
        #{treeSort,jdbcType=DECIMAL},
      </if>
      <if test="treeSorts != null">
        #{treeSorts,jdbcType=VARCHAR},
      </if>
      <if test="treeLeaf != null">
        #{treeLeaf,jdbcType=CHAR},
      </if>
      <if test="treeLevel != null">
        #{treeLevel,jdbcType=DECIMAL},
      </if>
      <if test="treeNames != null">
        #{treeNames,jdbcType=VARCHAR},
      </if>
      <if test="areaName != null">
        #{areaName,jdbcType=VARCHAR},
      </if>
      <if test="areaType != null">
        #{areaType,jdbcType=CHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=CHAR},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sixliu.credit.user.entity.SysAreaExample" resultType="java.lang.Long">
    select count(*) from sys_area
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sys_area
    <set>
      <if test="record.areaCode != null">
        area_code = #{record.areaCode,jdbcType=VARCHAR},
      </if>
      <if test="record.parentCode != null">
        parent_code = #{record.parentCode,jdbcType=VARCHAR},
      </if>
      <if test="record.parentCodes != null">
        parent_codes = #{record.parentCodes,jdbcType=VARCHAR},
      </if>
      <if test="record.treeSort != null">
        tree_sort = #{record.treeSort,jdbcType=DECIMAL},
      </if>
      <if test="record.treeSorts != null">
        tree_sorts = #{record.treeSorts,jdbcType=VARCHAR},
      </if>
      <if test="record.treeLeaf != null">
        tree_leaf = #{record.treeLeaf,jdbcType=CHAR},
      </if>
      <if test="record.treeLevel != null">
        tree_level = #{record.treeLevel,jdbcType=DECIMAL},
      </if>
      <if test="record.treeNames != null">
        tree_names = #{record.treeNames,jdbcType=VARCHAR},
      </if>
      <if test="record.areaName != null">
        area_name = #{record.areaName,jdbcType=VARCHAR},
      </if>
      <if test="record.areaType != null">
        area_type = #{record.areaType,jdbcType=CHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=CHAR},
      </if>
      <if test="record.createBy != null">
        create_by = #{record.createBy,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateBy != null">
        update_by = #{record.updateBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updateDate != null">
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remarks != null">
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sys_area
    set area_code = #{record.areaCode,jdbcType=VARCHAR},
      parent_code = #{record.parentCode,jdbcType=VARCHAR},
      parent_codes = #{record.parentCodes,jdbcType=VARCHAR},
      tree_sort = #{record.treeSort,jdbcType=DECIMAL},
      tree_sorts = #{record.treeSorts,jdbcType=VARCHAR},
      tree_leaf = #{record.treeLeaf,jdbcType=CHAR},
      tree_level = #{record.treeLevel,jdbcType=DECIMAL},
      tree_names = #{record.treeNames,jdbcType=VARCHAR},
      area_name = #{record.areaName,jdbcType=VARCHAR},
      area_type = #{record.areaType,jdbcType=CHAR},
      status = #{record.status,jdbcType=CHAR},
      create_by = #{record.createBy,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      update_by = #{record.updateBy,jdbcType=VARCHAR},
      update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      remarks = #{record.remarks,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sixliu.credit.user.entity.SysArea">
    update sys_area
    <set>
      <if test="parentCode != null">
        parent_code = #{parentCode,jdbcType=VARCHAR},
      </if>
      <if test="parentCodes != null">
        parent_codes = #{parentCodes,jdbcType=VARCHAR},
      </if>
      <if test="treeSort != null">
        tree_sort = #{treeSort,jdbcType=DECIMAL},
      </if>
      <if test="treeSorts != null">
        tree_sorts = #{treeSorts,jdbcType=VARCHAR},
      </if>
      <if test="treeLeaf != null">
        tree_leaf = #{treeLeaf,jdbcType=CHAR},
      </if>
      <if test="treeLevel != null">
        tree_level = #{treeLevel,jdbcType=DECIMAL},
      </if>
      <if test="treeNames != null">
        tree_names = #{treeNames,jdbcType=VARCHAR},
      </if>
      <if test="areaName != null">
        area_name = #{areaName,jdbcType=VARCHAR},
      </if>
      <if test="areaType != null">
        area_type = #{areaType,jdbcType=CHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=CHAR},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
    </set>
    where area_code = #{areaCode,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sixliu.credit.user.entity.SysArea">
    update sys_area
    set parent_code = #{parentCode,jdbcType=VARCHAR},
      parent_codes = #{parentCodes,jdbcType=VARCHAR},
      tree_sort = #{treeSort,jdbcType=DECIMAL},
      tree_sorts = #{treeSorts,jdbcType=VARCHAR},
      tree_leaf = #{treeLeaf,jdbcType=CHAR},
      tree_level = #{treeLevel,jdbcType=DECIMAL},
      tree_names = #{treeNames,jdbcType=VARCHAR},
      area_name = #{areaName,jdbcType=VARCHAR},
      area_type = #{areaType,jdbcType=CHAR},
      status = #{status,jdbcType=CHAR},
      create_by = #{createBy,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      remarks = #{remarks,jdbcType=VARCHAR}
    where area_code = #{areaCode,jdbcType=VARCHAR}
  </update>
</mapper>