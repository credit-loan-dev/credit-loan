<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sixliu.credit.user.mapper.SysEmployeeMapper">
  <resultMap id="BaseResultMap" type="com.sixliu.credit.user.entity.SysEmployee">
    <id column="emp_code" jdbcType="VARCHAR" property="empCode" />
    <result column="emp_name" jdbcType="VARCHAR" property="empName" />
    <result column="emp_name_en" jdbcType="VARCHAR" property="empNameEn" />
    <result column="office_code" jdbcType="VARCHAR" property="officeCode" />
    <result column="office_name" jdbcType="VARCHAR" property="officeName" />
    <result column="company_code" jdbcType="VARCHAR" property="companyCode" />
    <result column="company_name" jdbcType="VARCHAR" property="companyName" />
    <result column="status" jdbcType="CHAR" property="status" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="corp_code" jdbcType="VARCHAR" property="corpCode" />
    <result column="corp_name" jdbcType="VARCHAR" property="corpName" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    emp_code, emp_name, emp_name_en, office_code, office_name, company_code, company_name,
    status, create_by, create_date, update_by, update_date, remarks, corp_code, corp_name
  </sql>
  <select id="selectByExample" parameterType="com.sixliu.credit.user.entity.SysEmployeeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_employee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from sys_employee
    where emp_code = #{empCode,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from sys_employee
    where emp_code = #{empCode,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.sixliu.credit.user.entity.SysEmployeeExample">
    delete from sys_employee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sixliu.credit.user.entity.SysEmployee">
    insert into sys_employee (emp_code, emp_name, emp_name_en,
      office_code, office_name, company_code,
      company_name, status, create_by,
      create_date, update_by, update_date,
      remarks, corp_code, corp_name
      )
    values (#{empCode,jdbcType=VARCHAR}, #{empName,jdbcType=VARCHAR}, #{empNameEn,jdbcType=VARCHAR},
      #{officeCode,jdbcType=VARCHAR}, #{officeName,jdbcType=VARCHAR}, #{companyCode,jdbcType=VARCHAR},
      #{companyName,jdbcType=VARCHAR}, #{status,jdbcType=CHAR}, #{createBy,jdbcType=VARCHAR},
      #{createDate,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR}, #{updateDate,jdbcType=TIMESTAMP},
      #{remarks,jdbcType=VARCHAR}, #{corpCode,jdbcType=VARCHAR}, #{corpName,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sixliu.credit.user.entity.SysEmployee">
    insert into sys_employee
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="empCode != null">
        emp_code,
      </if>
      <if test="empName != null">
        emp_name,
      </if>
      <if test="empNameEn != null">
        emp_name_en,
      </if>
      <if test="officeCode != null">
        office_code,
      </if>
      <if test="officeName != null">
        office_name,
      </if>
      <if test="companyCode != null">
        company_code,
      </if>
      <if test="companyName != null">
        company_name,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
      <if test="corpCode != null">
        corp_code,
      </if>
      <if test="corpName != null">
        corp_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="empCode != null">
        #{empCode,jdbcType=VARCHAR},
      </if>
      <if test="empName != null">
        #{empName,jdbcType=VARCHAR},
      </if>
      <if test="empNameEn != null">
        #{empNameEn,jdbcType=VARCHAR},
      </if>
      <if test="officeCode != null">
        #{officeCode,jdbcType=VARCHAR},
      </if>
      <if test="officeName != null">
        #{officeName,jdbcType=VARCHAR},
      </if>
      <if test="companyCode != null">
        #{companyCode,jdbcType=VARCHAR},
      </if>
      <if test="companyName != null">
        #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=CHAR},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="corpCode != null">
        #{corpCode,jdbcType=VARCHAR},
      </if>
      <if test="corpName != null">
        #{corpName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sixliu.credit.user.entity.SysEmployeeExample" resultType="java.lang.Long">
    select count(*) from sys_employee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sys_employee
    <set>
      <if test="record.empCode != null">
        emp_code = #{record.empCode,jdbcType=VARCHAR},
      </if>
      <if test="record.empName != null">
        emp_name = #{record.empName,jdbcType=VARCHAR},
      </if>
      <if test="record.empNameEn != null">
        emp_name_en = #{record.empNameEn,jdbcType=VARCHAR},
      </if>
      <if test="record.officeCode != null">
        office_code = #{record.officeCode,jdbcType=VARCHAR},
      </if>
      <if test="record.officeName != null">
        office_name = #{record.officeName,jdbcType=VARCHAR},
      </if>
      <if test="record.companyCode != null">
        company_code = #{record.companyCode,jdbcType=VARCHAR},
      </if>
      <if test="record.companyName != null">
        company_name = #{record.companyName,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=CHAR},
      </if>
      <if test="record.createBy != null">
        create_by = #{record.createBy,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateBy != null">
        update_by = #{record.updateBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updateDate != null">
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remarks != null">
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
      <if test="record.corpCode != null">
        corp_code = #{record.corpCode,jdbcType=VARCHAR},
      </if>
      <if test="record.corpName != null">
        corp_name = #{record.corpName,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sys_employee
    set emp_code = #{record.empCode,jdbcType=VARCHAR},
      emp_name = #{record.empName,jdbcType=VARCHAR},
      emp_name_en = #{record.empNameEn,jdbcType=VARCHAR},
      office_code = #{record.officeCode,jdbcType=VARCHAR},
      office_name = #{record.officeName,jdbcType=VARCHAR},
      company_code = #{record.companyCode,jdbcType=VARCHAR},
      company_name = #{record.companyName,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=CHAR},
      create_by = #{record.createBy,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      update_by = #{record.updateBy,jdbcType=VARCHAR},
      update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      remarks = #{record.remarks,jdbcType=VARCHAR},
      corp_code = #{record.corpCode,jdbcType=VARCHAR},
      corp_name = #{record.corpName,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sixliu.credit.user.entity.SysEmployee">
    update sys_employee
    <set>
      <if test="empName != null">
        emp_name = #{empName,jdbcType=VARCHAR},
      </if>
      <if test="empNameEn != null">
        emp_name_en = #{empNameEn,jdbcType=VARCHAR},
      </if>
      <if test="officeCode != null">
        office_code = #{officeCode,jdbcType=VARCHAR},
      </if>
      <if test="officeName != null">
        office_name = #{officeName,jdbcType=VARCHAR},
      </if>
      <if test="companyCode != null">
        company_code = #{companyCode,jdbcType=VARCHAR},
      </if>
      <if test="companyName != null">
        company_name = #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=CHAR},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="corpCode != null">
        corp_code = #{corpCode,jdbcType=VARCHAR},
      </if>
      <if test="corpName != null">
        corp_name = #{corpName,jdbcType=VARCHAR},
      </if>
    </set>
    where emp_code = #{empCode,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sixliu.credit.user.entity.SysEmployee">
    update sys_employee
    set emp_name = #{empName,jdbcType=VARCHAR},
      emp_name_en = #{empNameEn,jdbcType=VARCHAR},
      office_code = #{officeCode,jdbcType=VARCHAR},
      office_name = #{officeName,jdbcType=VARCHAR},
      company_code = #{companyCode,jdbcType=VARCHAR},
      company_name = #{companyName,jdbcType=VARCHAR},
      status = #{status,jdbcType=CHAR},
      create_by = #{createBy,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      remarks = #{remarks,jdbcType=VARCHAR},
      corp_code = #{corpCode,jdbcType=VARCHAR},
      corp_name = #{corpName,jdbcType=VARCHAR}
    where emp_code = #{empCode,jdbcType=VARCHAR}
  </update>
</mapper>