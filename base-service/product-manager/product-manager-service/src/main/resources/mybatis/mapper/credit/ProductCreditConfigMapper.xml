<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sixliu.creditloan.product.dao.credit.ProductCreditConfigDao">

    <resultMap id="ProductCreditConfigResult" type="com.sixliu.creditloan.product.entity.credit.ProductCreditConfig" >
        <id column="id" property="id" jdbcType="VARCHAR" />
        <result column="product_id" property="productId" jdbcType="VARCHAR" />
        <result column="apply_mutex_type" property="applyMutexType" jdbcType="VARCHAR" />
        <result column="use_blacklist_group_id" property="useBlacklistGroupId" jdbcType="INTEGER"/>
        <result column="apply_max_day_duration" property="applyMaxDayDuration" jdbcType="INTEGER"/>
        <result column="apply_flow_job_modle_id" property="applyFlowJobModleId" jdbcType="VARCHAR"/>
        <result column="interfere_days_after_reject" property="interfereDaysAfterReject" jdbcType="INTEGER"/>
        <result column="remarks" property="remarks" jdbcType="VARCHAR"/>
        <result column="version" property="version" jdbcType="INTEGER"/>
        <result column="update_user_id" property="updateUserId" jdbcType="VARCHAR"/>
        <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
        <result column="create_user_id" property="createUserId" jdbcType="VARCHAR" />
        <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    </resultMap>
    <parameterMap id="ProductCreditConfigParameter" type="com.sixliu.creditloan.product.entity.credit.ProductCreditConfig"/>
    
    <!-- from 表 -->
    <sql id="from_table">
    	from product_credit_config
    </sql>
    
    <!-- 查询通用列 -->
    <sql id="select_common_column">
    	select 
    		`id`,
	        product_id,
	        apply_mutex_type,
	        use_blacklist_group_id,	 
	        apply_max_day_duration,
	        apply_flow_job_modle_id,
	        interfere_days_after_reject,
	        `remarks`,
	        `version`,
	        update_user_id,
	        update_date,
	        create_user_id,
	        create_date
	</sql>
	
    <!-- intsert to 表 -->
    <sql id="insert_common_table">
    	insert into product_credit_config(
    								id,
    								product_id,
    								apply_mutex_type,
    								use_blacklist_group_id,   					
  									apply_max_day_duration,
  									apply_flow_job_modle_id,
  									interfere_days_after_reject,
    	 							`remarks`,
    	 							update_user_id,
    	 							create_user_id
    	 							)
    	 					 values(#{id},
    	 							#{productId},
    	 							#{applyMutexType},
    	 							#{useBlacklistGroupId},
    		   						#{applyMaxDayDuration},
    		   						#{applyFlowJobModleId},
    		   						#{interfereDaysAfterReject},		   						
    		   						#{remarks},
    		   						#{updateUserId},
    		   						#{createUserId}
    		   						)
    </sql>

    <sql id="delete_from_table">
    	delete from product_credit_config
    </sql>
    
	<select id="get" resultMap="ProductCreditConfigResult" >
		<include refid="select_common_column"/>
		<include refid="from_table"/>
        where 1=1
        and `id` =#{id}
    </select>
    
    <select id="getByProductId" resultMap="ProductCreditConfigResult" >
		<include refid="select_common_column"/>
		<include refid="from_table"/>
        where 1=1
        and product_id =#{productId}
    </select>
    
    <insert id="insert" parameterMap="ProductCreditConfigParameter">
    	<selectKey keyProperty="id" resultType="java.lang.String" order="BEFORE">
              select uuid()
    	</selectKey>
    	<include refid="insert_common_table"/>
	</insert>
	
</mapper>