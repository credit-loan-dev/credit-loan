{"remainingRequest":"D:\\liusong\\git_place\\credit-loan\\pre-application\\web-view\\node_modules\\babel-loader\\lib\\index.js!D:\\liusong\\git_place\\credit-loan\\pre-application\\web-view\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\liusong\\git_place\\credit-loan\\pre-application\\web-view\\src\\store\\module\\app.js","dependencies":[{"path":"D:\\liusong\\git_place\\credit-loan\\pre-application\\web-view\\src\\store\\module\\app.js","mtime":1535506635909},{"path":"D:\\liusong\\git_place\\credit-loan\\pre-application\\web-view\\.babelrc","mtime":1535506636092},{"path":"D:\\liusong\\git_place\\credit-loan\\pre-application\\web-view\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1535516444031},{"path":"D:\\liusong\\git_place\\credit-loan\\pre-application\\web-view\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"D:\\liusong\\git_place\\credit-loan\\pre-application\\web-view\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport _toConsumableArray from \"D:\\\\liusong\\\\git_place\\\\credit-loan\\\\pre-application\\\\web-view\\\\node_modules\\\\@babel\\\\runtime/helpers/builtin/es6/toConsumableArray\";\nimport { getBreadCrumbList, setTagNavListInLocalstorage, getMenuByRouter, getTagNavListFromLocalstorage, getHomeRoute, routeHasExist } from '@/libs/util';\nimport routers from '@/router/routers';\nexport default {\n  state: {\n    breadCrumbList: [],\n    tagNavList: [],\n    homeRoute: getHomeRoute(routers),\n    local: ''\n  },\n  getters: {\n    menuList: function menuList(state, getters, rootState) {\n      return getMenuByRouter(routers, rootState.user.access);\n    }\n  },\n  mutations: {\n    setBreadCrumb: function setBreadCrumb(state, routeMetched) {\n      state.breadCrumbList = getBreadCrumbList(routeMetched, state.homeRoute);\n    },\n    setTagNavList: function setTagNavList(state, list) {\n      if (list) {\n        state.tagNavList = _toConsumableArray(list);\n        setTagNavListInLocalstorage(_toConsumableArray(list));\n      } else state.tagNavList = getTagNavListFromLocalstorage();\n    },\n    addTag: function addTag(state, _ref) {\n      var route = _ref.route,\n          _ref$type = _ref.type,\n          type = _ref$type === void 0 ? 'unshift' : _ref$type;\n\n      if (!routeHasExist(state.tagNavList, route)) {\n        if (type === 'push') state.tagNavList.push(route);else {\n          if (route.name === 'home') state.tagNavList.unshift(route);else state.tagNavList.splice(1, 0, route);\n        }\n        setTagNavListInLocalstorage(_toConsumableArray(state.tagNavList));\n      }\n    },\n    setLocal: function setLocal(state, lang) {\n      state.local = lang;\n    }\n  }\n};",{"version":3,"sources":["src\\store\\module\\app.js"],"names":["getBreadCrumbList","setTagNavListInLocalstorage","getMenuByRouter","getTagNavListFromLocalstorage","getHomeRoute","routeHasExist","routers","state","breadCrumbList","tagNavList","homeRoute","local","getters","menuList","rootState","user","access","mutations","setBreadCrumb","routeMetched","setTagNavList","list","addTag","route","type","push","name","unshift","splice","setLocal","lang"],"mappings":";;AAAA,SAASA,iBAAT,EAA4BC,2BAA5B,EAAyDC,eAAzD,EAA0EC,6BAA1E,EAAyGC,YAAzG,EAAuHC,aAAvH,QAA4I,aAA5I;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,eAAe;AACbC,SAAO;AACLC,oBAAgB,EADX;AAELC,gBAAY,EAFP;AAGLC,eAAWN,aAAaE,OAAb,CAHN;AAILK,WAAO;AAJF,GADM;AAObC,WAAS;AACPC,cAAU,kBAACN,KAAD,EAAQK,OAAR,EAAiBE,SAAjB;AAAA,aAA+BZ,gBAAgBI,OAAhB,EAAyBQ,UAAUC,IAAV,CAAeC,MAAxC,CAA/B;AAAA;AADH,GAPI;AAUbC,aAAW;AACTC,iBADS,yBACMX,KADN,EACaY,YADb,EAC2B;AAClCZ,YAAMC,cAAN,GAAuBR,kBAAkBmB,YAAlB,EAAgCZ,MAAMG,SAAtC,CAAvB;AACD,KAHQ;AAITU,iBAJS,yBAIMb,KAJN,EAIac,IAJb,EAImB;AAC1B,UAAIA,IAAJ,EAAU;AACRd,cAAME,UAAN,sBAAuBY,IAAvB;AACApB,uDAAgCoB,IAAhC;AACD,OAHD,MAGOd,MAAME,UAAN,GAAmBN,+BAAnB;AACR,KATQ;AAUTmB,UAVS,kBAUDf,KAVC,QAUmC;AAAA,UAA3BgB,KAA2B,QAA3BA,KAA2B;AAAA,2BAApBC,IAAoB;AAAA,UAApBA,IAAoB,0BAAb,SAAa;;AAC1C,UAAI,CAACnB,cAAcE,MAAME,UAApB,EAAgCc,KAAhC,CAAL,EAA6C;AAC3C,YAAIC,SAAS,MAAb,EAAqBjB,MAAME,UAAN,CAAiBgB,IAAjB,CAAsBF,KAAtB,EAArB,KACK;AACH,cAAIA,MAAMG,IAAN,KAAe,MAAnB,EAA2BnB,MAAME,UAAN,CAAiBkB,OAAjB,CAAyBJ,KAAzB,EAA3B,KACKhB,MAAME,UAAN,CAAiBmB,MAAjB,CAAwB,CAAxB,EAA2B,CAA3B,EAA8BL,KAA9B;AACN;AACDtB,uDAAgCM,MAAME,UAAtC;AACD;AACF,KAnBQ;AAoBToB,YApBS,oBAoBCtB,KApBD,EAoBQuB,IApBR,EAoBc;AACrBvB,YAAMI,KAAN,GAAcmB,IAAd;AACD;AAtBQ;AAVE,CAAf","sourceRoot":"D:\\liusong\\git_place\\credit-loan\\pre-application\\web-view","sourcesContent":["import { getBreadCrumbList, setTagNavListInLocalstorage, getMenuByRouter, getTagNavListFromLocalstorage, getHomeRoute, routeHasExist } from '@/libs/util'\nimport routers from '@/router/routers'\nexport default {\n  state: {\n    breadCrumbList: [],\n    tagNavList: [],\n    homeRoute: getHomeRoute(routers),\n    local: ''\n  },\n  getters: {\n    menuList: (state, getters, rootState) => getMenuByRouter(routers, rootState.user.access)\n  },\n  mutations: {\n    setBreadCrumb (state, routeMetched) {\n      state.breadCrumbList = getBreadCrumbList(routeMetched, state.homeRoute)\n    },\n    setTagNavList (state, list) {\n      if (list) {\n        state.tagNavList = [...list]\n        setTagNavListInLocalstorage([...list])\n      } else state.tagNavList = getTagNavListFromLocalstorage()\n    },\n    addTag (state, { route, type = 'unshift' }) {\n      if (!routeHasExist(state.tagNavList, route)) {\n        if (type === 'push') state.tagNavList.push(route)\n        else {\n          if (route.name === 'home') state.tagNavList.unshift(route)\n          else state.tagNavList.splice(1, 0, route)\n        }\n        setTagNavListInLocalstorage([...state.tagNavList])\n      }\n    },\n    setLocal (state, lang) {\n      state.local = lang\n    }\n  }\n}\n"]}]}