{"remainingRequest":"D:\\liusong\\git_place\\credit-loan\\pre-application\\web-view\\node_modules\\babel-loader\\lib\\index.js!D:\\liusong\\git_place\\credit-loan\\pre-application\\web-view\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\liusong\\git_place\\credit-loan\\pre-application\\web-view\\src\\store\\module\\user.js","dependencies":[{"path":"D:\\liusong\\git_place\\credit-loan\\pre-application\\web-view\\src\\store\\module\\user.js","mtime":1535506636069},{"path":"D:\\liusong\\git_place\\credit-loan\\pre-application\\web-view\\.babelrc","mtime":1535506636092},{"path":"D:\\liusong\\git_place\\credit-loan\\pre-application\\web-view\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1535516444031},{"path":"D:\\liusong\\git_place\\credit-loan\\pre-application\\web-view\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"D:\\liusong\\git_place\\credit-loan\\pre-application\\web-view\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { login, logout, getUserInfo as _getUserInfo } from '@/api/user';\nimport { setToken as _setToken, getToken } from '@/libs/util';\nexport default {\n  state: {\n    userName: '',\n    userId: '',\n    avatorImgPath: '',\n    token: getToken(),\n    access: ''\n  },\n  mutations: {\n    setAvator: function setAvator(state, avatorPath) {\n      state.avatorImgPath = avatorPath;\n    },\n    setUserId: function setUserId(state, id) {\n      state.userId = id;\n    },\n    setUserName: function setUserName(state, name) {\n      state.userName = name;\n    },\n    setAccess: function setAccess(state, access) {\n      state.access = access;\n    },\n    setToken: function setToken(state, token) {\n      state.token = token;\n\n      _setToken(token);\n    }\n  },\n  actions: {\n    // 登录\n    handleLogin: function handleLogin(_ref, _ref2) {\n      var commit = _ref.commit;\n      var userName = _ref2.userName,\n          password = _ref2.password;\n      userName = userName.trim();\n      return new Promise(function (resolve, reject) {\n        login({\n          userName: userName,\n          password: password\n        }).then(function (res) {\n          var data = res.data;\n          commit('setToken', data.token);\n          resolve();\n        }).catch(function (err) {\n          reject(err);\n        });\n      });\n    },\n    // 退出登录\n    handleLogOut: function handleLogOut(_ref3) {\n      var state = _ref3.state,\n          commit = _ref3.commit;\n      return new Promise(function (resolve, reject) {\n        logout(state.token).then(function () {\n          commit('setToken', '');\n          commit('setAccess', []);\n          resolve();\n        }).catch(function (err) {\n          reject(err);\n        }); // 如果你的退出登录无需请求接口，则可以直接使用下面三行代码而无需使用logout调用接口\n        // commit('setToken', '')\n        // commit('setAccess', [])\n        // resolve()\n      });\n    },\n    // 获取用户相关信息\n    getUserInfo: function getUserInfo(_ref4) {\n      var state = _ref4.state,\n          commit = _ref4.commit;\n      return new Promise(function (resolve, reject) {\n        _getUserInfo(state.token).then(function (res) {\n          var data = res.data;\n          commit('setAvator', data.avator);\n          commit('setUserName', data.user_name);\n          commit('setUserId', data.user_id);\n          commit('setAccess', data.access);\n          resolve(data);\n        }).catch(function (err) {\n          reject(err);\n        });\n      });\n    }\n  }\n};",{"version":3,"sources":["src\\store\\module\\user.js"],"names":["login","logout","getUserInfo","setToken","getToken","state","userName","userId","avatorImgPath","token","access","mutations","setAvator","avatorPath","setUserId","id","setUserName","name","setAccess","actions","handleLogin","commit","password","trim","Promise","resolve","reject","then","data","res","catch","err","handleLogOut","avator","user_name","user_id"],"mappings":"AAAA,SAASA,KAAT,EAAgBC,MAAhB,EAAwBC,2BAAxB,QAA2C,YAA3C;AACA,SAASC,qBAAT,EAAmBC,QAAnB,QAAmC,aAAnC;AAEA,eAAe;AACbC,SAAO;AACLC,cAAU,EADL;AAELC,YAAQ,EAFH;AAGLC,mBAAe,EAHV;AAILC,WAAOL,UAJF;AAKLM,YAAQ;AALH,GADM;AAQbC,aAAW;AACTC,aADS,qBACEP,KADF,EACSQ,UADT,EACqB;AAC5BR,YAAMG,aAAN,GAAsBK,UAAtB;AACD,KAHQ;AAITC,aAJS,qBAIET,KAJF,EAISU,EAJT,EAIa;AACpBV,YAAME,MAAN,GAAeQ,EAAf;AACD,KANQ;AAOTC,eAPS,uBAOIX,KAPJ,EAOWY,IAPX,EAOiB;AACxBZ,YAAMC,QAAN,GAAiBW,IAAjB;AACD,KATQ;AAUTC,aAVS,qBAUEb,KAVF,EAUSK,MAVT,EAUiB;AACxBL,YAAMK,MAAN,GAAeA,MAAf;AACD,KAZQ;AAaTP,YAbS,oBAaCE,KAbD,EAaQI,KAbR,EAae;AACtBJ,YAAMI,KAAN,GAAcA,KAAd;;AACAN,gBAASM,KAAT;AACD;AAhBQ,GARE;AA0BbU,WAAS;AACP;AACAC,eAFO,oCAEwC;AAAA,UAAhCC,MAAgC,QAAhCA,MAAgC;AAAA,UAArBf,QAAqB,SAArBA,QAAqB;AAAA,UAAXgB,QAAW,SAAXA,QAAW;AAC7ChB,iBAAWA,SAASiB,IAAT,EAAX;AACA,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC1B,cAAM;AACJM,4BADI;AAEJgB;AAFI,SAAN,EAGGK,IAHH,CAGQ,eAAO;AACb,cAAMC,OAAOC,IAAID,IAAjB;AACAP,iBAAO,UAAP,EAAmBO,KAAKnB,KAAxB;AACAgB;AACD,SAPD,EAOGK,KAPH,CAOS,eAAO;AACdJ,iBAAOK,GAAP;AACD,SATD;AAUD,OAXM,CAAP;AAYD,KAhBM;AAiBP;AACAC,gBAlBO,+BAkB0B;AAAA,UAAjB3B,KAAiB,SAAjBA,KAAiB;AAAA,UAAVgB,MAAU,SAAVA,MAAU;AAC/B,aAAO,IAAIG,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCzB,eAAOI,MAAMI,KAAb,EAAoBkB,IAApB,CAAyB,YAAM;AAC7BN,iBAAO,UAAP,EAAmB,EAAnB;AACAA,iBAAO,WAAP,EAAoB,EAApB;AACAI;AACD,SAJD,EAIGK,KAJH,CAIS,eAAO;AACdJ,iBAAOK,GAAP;AACD,SAND,EADsC,CAQtC;AACA;AACA;AACA;AACD,OAZM,CAAP;AAaD,KAhCM;AAiCP;AACA7B,eAlCO,8BAkCyB;AAAA,UAAjBG,KAAiB,SAAjBA,KAAiB;AAAA,UAAVgB,MAAU,SAAVA,MAAU;AAC9B,aAAO,IAAIG,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCxB,qBAAYG,MAAMI,KAAlB,EAAyBkB,IAAzB,CAA8B,eAAO;AACnC,cAAMC,OAAOC,IAAID,IAAjB;AACAP,iBAAO,WAAP,EAAoBO,KAAKK,MAAzB;AACAZ,iBAAO,aAAP,EAAsBO,KAAKM,SAA3B;AACAb,iBAAO,WAAP,EAAoBO,KAAKO,OAAzB;AACAd,iBAAO,WAAP,EAAoBO,KAAKlB,MAAzB;AACAe,kBAAQG,IAAR;AACD,SAPD,EAOGE,KAPH,CAOS,eAAO;AACdJ,iBAAOK,GAAP;AACD,SATD;AAUD,OAXM,CAAP;AAYD;AA/CM;AA1BI,CAAf","sourceRoot":"D:\\liusong\\git_place\\credit-loan\\pre-application\\web-view","sourcesContent":["import { login, logout, getUserInfo } from '@/api/user'\nimport { setToken, getToken } from '@/libs/util'\n\nexport default {\n  state: {\n    userName: '',\n    userId: '',\n    avatorImgPath: '',\n    token: getToken(),\n    access: ''\n  },\n  mutations: {\n    setAvator (state, avatorPath) {\n      state.avatorImgPath = avatorPath\n    },\n    setUserId (state, id) {\n      state.userId = id\n    },\n    setUserName (state, name) {\n      state.userName = name\n    },\n    setAccess (state, access) {\n      state.access = access\n    },\n    setToken (state, token) {\n      state.token = token\n      setToken(token)\n    }\n  },\n  actions: {\n    // 登录\n    handleLogin ({ commit }, {userName, password}) {\n      userName = userName.trim()\n      return new Promise((resolve, reject) => {\n        login({\n          userName,\n          password\n        }).then(res => {\n          const data = res.data\n          commit('setToken', data.token)\n          resolve()\n        }).catch(err => {\n          reject(err)\n        })\n      })\n    },\n    // 退出登录\n    handleLogOut ({ state, commit }) {\n      return new Promise((resolve, reject) => {\n        logout(state.token).then(() => {\n          commit('setToken', '')\n          commit('setAccess', [])\n          resolve()\n        }).catch(err => {\n          reject(err)\n        })\n        // 如果你的退出登录无需请求接口，则可以直接使用下面三行代码而无需使用logout调用接口\n        // commit('setToken', '')\n        // commit('setAccess', [])\n        // resolve()\n      })\n    },\n    // 获取用户相关信息\n    getUserInfo ({ state, commit }) {\n      return new Promise((resolve, reject) => {\n        getUserInfo(state.token).then(res => {\n          const data = res.data\n          commit('setAvator', data.avator)\n          commit('setUserName', data.user_name)\n          commit('setUserId', data.user_id)\n          commit('setAccess', data.access)\n          resolve(data)\n        }).catch(err => {\n          reject(err)\n        })\n      })\n    }\n  }\n}\n"]}]}